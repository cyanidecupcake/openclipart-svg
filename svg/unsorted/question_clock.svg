<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Created by David Eccles (gringer) <upvotes@gringene.org> -->
<svg
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:cc="http://creativecommons.org/ns#"
    xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
    xmlns:svg="http://www.w3.org/2000/svg"
    xmlns="http://www.w3.org/2000/svg"
    xmlns:xlink="http://www.w3.org/1999/xlink"
    xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
    xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
    xmlns:ns1="http://sozi.baierouge.fr"
    viewBox="-5 -5 410 410"
    preserveAspectRatio="xMidYMid"
    width="100%"
    height="100%"
    id="svg3002"
    version="1.1"
    onload="startup(evt)"
  >
  <script
    ><![CDATA[
             var svgDocument=null;
             var T,ASG;
             var lMA = -1;
             var numCopies = 12;
             var updateTimeMillis = 100;
             var shapeArray = new Array(numCopies);
             var shapeOutArray = new Array(numCopies);
             var sInHD = 60*60*12;
             var SVGns = "http://www.w3.org/2000/svg";
             var SVGxmlns = 'http://www.w3.org/2000/xmlns/';
             var SVGxlink = 'http://www.w3.org/1999/xlink';
             function pad2(number) {
               var str = "" + ~~number;
               while(str.length < 2){
                 str = "0" + str;
               }
               return(str);
             }
             function startup(evt){
               svgDocument=evt.target.ownerDocument;
               var thumb = svgDocument.getElementById("gThumbnail");
               thumb.parentNode.removeChild(thumb);
               T = svgDocument.getElementById("tTime");
               for(i = 1; i <= numCopies; i++){
                 ASG = svgDocument.getElementById("gAllShapes");
                 var shapeOutGroup = svgDocument.createElementNS(SVGns,"g");
                 var shapeGroup = svgDocument.createElementNS(SVGns,"g");
                 var shape = svgDocument.createElementNS(SVGns,"use");
                 shape.setAttributeNS(SVGxlink, "href","#gTemplate");
                 shape.setAttribute("x", 200);
                 shape.setAttribute("y", 300);
                 shapeGroup.appendChild(shape);
                 shapeOutGroup.appendChild(shapeGroup);
                 ASG.appendChild(shapeOutGroup);
                 shapeOutArray[i-1] = shapeOutGroup;
                 shapeArray[i-1] = shapeGroup;
               }
               window.setInterval("changeTime()",updateTimeMillis);
               changeTime();
             }
             function changeTime(){
               var currentDate = new Date();
               var dateSeconds = (currentDate.getTime() / 1000) % (sInHD);
               var secInt = ~~dateSeconds;
               var secFrac =
                  (1 - Math.sin((0.5 - (dateSeconds - secInt)) * Math.PI))/2;
               <!-- var secFrac = (dateSeconds - secInt); -->
               var hourPart = currentDate.getHours();
               var minPart = currentDate.getMinutes();
               var hAng = ((dateSeconds / sInHD) * 360);
               var mAng = (~~((dateSeconds % 3600) / 60) * 6);
               var sAng = (((secInt + secFrac) % 60) / 60 + 
                           (minPart % 2)) * 360;
               if(lMA != mAng){
                 lMA = mAng;
                 T.firstChild.nodeValue = pad2(hourPart) + ":" +
                   pad2(minPart);
               }
               for(i = 1; i <= numCopies; i++){
                 shapeOutGroup = shapeOutArray[i-1];
                 shapeGroup = shapeArray[i-1];
                 var loopAngle = (i * sAng) % 720;
                 moveX = Math.cos((loopAngle+90) * i * (Math.PI/180)) * 150;
                 moveY = Math.sin((loopAngle+90) * i * (Math.PI/180)) * 150;
                 if(loopAngle < 360){
                   shapeGroup.setAttribute("fill","#ff8b60");
                 } else {
                   shapeGroup.setAttribute("fill","#9494ff");
                 }
                 shapeGroup.setAttribute("transform",
                   "rotate("+(loopAngle/2)+" 200 300)");
                 shapeOutGroup.setAttribute("transform",
                   "rotate("+(loopAngle)+" 200 200)");
               }
             }
             //]]></script
  >
  <defs
    >
    <g
        id="gTemplate"
      >
      <g
          transform="translate(4,5)"
        >
        <path
            stroke="black"
            stroke-width="0.5"
            fill-opacity="0.5"
            d="m -2.55,-19.35 c -0.1,-9.8 1,-12.5 7.4,-18 9.8,-8.7 12,-12.1 12,-19.1 0,-10.4 -7.7,-17.4 -19.1,-17.4 -11.3,0 -19.5,6.2 -19.5,14.8 0,4.4 2.8,7.7 6.5,7.7 3.2,0 5.7,-2.4 5.7,-5.5 0,-2 -1,-3.7 -2.9,-5.3 -1.5,-1.2 -1.6,-1.4 -1.6,-2.2 0,-2.6 4.4,-5 9.2,-5 7.1,0 11.2,4.6 11.2,12.3 0,4.1 -1.2,7.9 -3.2,10.8 -7.4,10.1 -7.4,10.1 -8.7,13.6 -1,2.8 -1.4,5.4 -1.4,10.1 l 0,3.2 4.4,0"
        />
        <circle
            cx="-4"
            cy="-5"
            r="6"
            stroke="black"
            fill-opacity="0.5"
            stroke-width="0.5"
        />
      </g
      >
    </g
    >
  </defs
  >
  <text
      id="tTime"
      x="200"
      y="200"
      text-anchor="middle"
      dominant-baseline="middle"
    > </text
  >
  <g
      id="gAllShapes"
  />
  <g
      id="gThumbnail"
    >
    <g
        id="gTClone1"
        transform="rotate(89 200 200) rotate(48.5 200 300)"
        fill="#ff8b60"
      >
      <use
          x="200"
          y="300"
          xlink:href="#gTemplate"
      />
    </g
    >
    <g
        id="gTClone2"
        transform="rotate(178 200 200) rotate(89 200 300)"
        fill="#9494ff"
      >
      <use
          x="200"
          y="300"
          xlink:href="#gTemplate"
      />
    </g
    >
    <g
        id="gTClone3"
        transform="rotate(267 200 200) rotate(133.5 200 300)"
        fill="#ff8b60"
      >
      <use
          x="200"
          y="300"
          xlink:href="#gTemplate"
      />
    </g
    >
    <g
        id="gTClone4"
        transform="rotate(356 200 200) rotate(178 200 300)"
        fill="#9494ff"
      >
      <use
          x="200"
          y="300"
          xlink:href="#gTemplate"
      />
    </g
    >
    <g
        id="gTClone5"
        transform="rotate(445 200 200) rotate(222.5 200 300)"
        fill="#ff8b60"
      >
      <use
          x="200"
          y="300"
          xlink:href="#gTemplate"
      />
    </g
    >
    <g
        id="gTClone6"
        transform="rotate(534 200 200) rotate(267 200 300)"
        fill="#9494ff"
      >
      <use
          x="200"
          y="300"
          xlink:href="#gTemplate"
      />
    </g
    >
    <g
        id="gTClone7"
        transform="rotate(623 200 200) rotate(311.5 200 300)"
        fill="#ff8b60"
      >
      <use
          x="200"
          y="300"
          xlink:href="#gTemplate"
      />
    </g
    >
    <g
        id="gTClone8"
        transform="rotate(712 200 200) rotate(356 200 300)"
        fill="#9494ff"
      >
      <use
          x="200"
          y="300"
          xlink:href="#gTemplate"
      />
    </g
    >
    <g
        id="gTClone9"
        transform="rotate(81 200 200) rotate(40.5 200 300)"
        fill="#ff8b60"
      >
      <use
          x="200"
          y="300"
          xlink:href="#gTemplate"
      />
    </g
    >
    <g
        id="gTClone10"
        transform="rotate(170 200 200) rotate(85 200 300)"
        fill="#9494ff"
      >
      <use
          x="200"
          y="300"
          xlink:href="#gTemplate"
      />
    </g
    >
    <g
        id="gTClone11"
        transform="rotate(259 200 200) rotate(129.5 200 300)"
        fill="#ff8b60"
      >
      <use
          x="200"
          y="300"
          xlink:href="#gTemplate"
      />
    </g
    >
    <g
        id="gTClone12"
        transform="rotate(348 200 200) rotate(174 200 300)"
        fill="#9494ff"
      >
      <use
          x="200"
          y="300"
          xlink:href="#gTemplate"
      />
    </g
    >
  </g
  >
  <metadata
    >
    <rdf:RDF
      >
      <cc:Work
        >
        <dc:format
          >image/svg+xml</dc:format
        >
        <dc:type
            rdf:resource="http://purl.org/dc/dcmitype/StillImage"
        />
        <cc:license
            rdf:resource="http://creativecommons.org/licenses/publicdomain/"
        />
        <dc:publisher
          >
          <cc:Agent
              rdf:about="http://openclipart.org/"
            >
            <dc:title
              >Openclipart</dc:title
            >
          </cc:Agent
          >
        </dc:publisher
        >
        <dc:title
          >Question Clock</dc:title
        >
        <dc:date
          >2014-06-22T03:16:54</dc:date
        >
        <dc:description
          >Question variant of my upvote clock (font used is "Century Schoolbook L", converted to a shape for portability, with the dot replaced with a circle for precision). The question marks spin around at twice the speed that they rotate around the circle, and change colour once they complete a circle. This makes a full cycle two minutes, rather than one.\n\n[Yes, the thumnail colours are wrong. Sorry about that]</dc:description
        >
        <dc:source
          >https://openclipart.org/detail/194352/question-clock-by-gringer-194352</dc:source
        >
        <dc:creator
          >
          <cc:Agent
            >
            <dc:title
              >gringer</dc:title
            >
          </cc:Agent
          >
        </dc:creator
        >
        <dc:subject
          >
          <rdf:Bag
            >
            <rdf:li
              >animated</rdf:li
            >
            <rdf:li
              >clock</rdf:li
            >
            <rdf:li
              >reddit</rdf:li
            >
            <rdf:li
              >rotating</rdf:li
            >
            <rdf:li
              >time</rdf:li
            >
            <rdf:li
              >upvote</rdf:li
            >
          </rdf:Bag
          >
        </dc:subject
        >
      </cc:Work
      >
      <cc:License
          rdf:about="http://creativecommons.org/licenses/publicdomain/"
        >
        <cc:permits
            rdf:resource="http://creativecommons.org/ns#Reproduction"
        />
        <cc:permits
            rdf:resource="http://creativecommons.org/ns#Distribution"
        />
        <cc:permits
            rdf:resource="http://creativecommons.org/ns#DerivativeWorks"
        />
      </cc:License
      >
    </rdf:RDF
    >
  </metadata
  >
</svg
>
